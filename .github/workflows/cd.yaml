name: Continuous deployment

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Detect changes
      uses: dorny/paths-filter@v3
      with:
        filters: |
          bot:
            - "apps/bot/**"
          docs:
            - "apps/docs/**"
    - name: Deploy bot application
      uses: appleboy/ssh-action@master
      # if: steps.changes.outputs.bot == 'true'
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          set -e
          for secret_key in $(echo "$SECRETS" | jq -r 'keys[]'); do
            secret_value=$(echo "$SECRETS" | jq -r --arg key "$secret_key" '.[$key]')
            echo $secret_key
            echo "$secret_key=$secret_value >> .env"
          done
          cd ~/serpine-bot
          git pull origin master
          docker compose --env-file ~/.env up --build --force-recreate --no-deps -d bot
          docker system prune -f
